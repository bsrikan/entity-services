xquery version "1.0-ml";
module namespace test-3-from-test-6
    = "http://marklogic.com/test/Test-3-0.0.1-from-Test-6-0.0.1";

import module namespace es = "http://marklogic.com/entity-services"
    at "/MarkLogic/entity-services/entity-services.xqy";

declare option xdmp:mapping "false";

(:
 This module was generated by MarkLogic Entity Services.
 Its purpose is to create instances of entity types
 defined in
 Test-3, version 0.0.1
 from documents that were persisted according to model
 Test-6, version 0.0.1

 Modification History:
 Generated at timestamp: 2016-10-27T16:50:12.893283-07:00
 Persisted by AUTHOR
 Date: DATE

 Target Model Test-3-0.0.1 Info:

 Type Product: 
    missing from source model.
    primaryKey: ProductName, ( in source: None )
    required: None
    range indexes: None
    word lexicons: None
 
 Type Customer: 
    Removed Type
 
:)


(:~
 : Creates a map:map instance representation of the target entity type
 : from a document that contains the source entity instance.
 : @param $source-node  A document or node that contains data conforming to the
 : source entity type
 : @return A map:map instance that holds the data for this entity type.
 :)
declare function test-3-from-test-6:convert-instance-Product(
    $source-node as node()
) as map:map
{
    json:object()
    (: The following line identifies the type of this instance.  Do not change it. :)
    =>map:with('$type', 'Product')
    (: The following lines are generated from the 'Product' entity type. :)
    =>   map:with('ProductName',            xs:string($source-node/Product/ProductName))
    =>es:optional('UnitPrice',              xs:integer($source-node/Product/UnitPrice))
    =>es:optional('SupplierID',             xs:integer($source-node/Product/SupplierID))
    =>es:optional('Discontinued',           xs:boolean($source-node/Product/Discontinued))

};
    
(:
 Entity type Customer is in source document
 but not in target document.
 The following XPath expressions should get values from the source
 instances but there is no specified target.
 This comment can be as a starting point for writing a custom
 version converter.

declare function test-3-from-test-6:convert-instance-Customer(
    $source-node as node()
) as map:map
{
    json:object()
    =>map:with('$type', 'Customer')
    =>   map:with('CustomerId',             xs:string($source-node/CustomerId))
    =>es:optional('CompanyName',            xs:string($source-node/CompanyName))
    =>es:optional('Country',                xs:string($source-node/Country))
    =>es:optional('ContactName',            xs:string($source-node/ContactName))
:)